QUESTIONS

> What is the main difference between a stack and a queue?

A: The main difference between a stack and a queue is a stack arranges elements in LIFO priority and Queue arranges elements in FIFO priority.


>  What are the similarities between stacks and queues?

A:
* They both store data
* Enable engineers to rank tasks
* Allow an order of operations
* Support system functions

> Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

A: While implementing UNDO, I would use a stack. As the user completes actions within the word processor, you can add those actions to a stack. When the user clicks UNDO, you can put the last action entered from the stack, undoing the action.


PROGRAMMING QUESTIONS
You may program the following question in any language of your choice. Before you begin coding, write out a plan as to how you will solve the question.

> Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

A:
  const myString = 'Hello world!';
  const originalStack = [...myString];
  let reverseString = '';

  for(let i = 0; i < myString.length; i++) {
    reverseString += originalStack.pop();
  }

> Implement the pop method of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure. Since the internal list is not the same as defined in the checkpoint, it may help to rewrite the pseudocode first.

A:
CLASS Stack
FUNCTION pop(queue) {
   let list = [];
   for (let i = 0; i < queue.length-1; i++)
    list.push(queue[i]);
  let deleted = queue[queue.length-1]
  return deleted
}
 END FUNCTION
END CLASS

2.
CLASS Stack
 FUNCTION pop(queue)
   ENTER queue array
   CALL delete function
   FOR to loop elements in the array
   PUSH elements to the array
   CALL .pop to delete the last element
   RETURN new array
 END FUNCTION
END CLASS


To delete an item, take all of the elements in the queue one at a time and put them at the end of the queue, except for the last one which should be removed and returned.

> Implement the enqueue and dequeue methods defined in the checkpoint inside your own Queue class.

A:
CLASS QUEUE
 FUNCTION enqueue(element)
 THEN push items(element)
 END FUNCTION

 FUNCTION dequeue
THEN shift items()
 END FUNCTION
END CLASS
